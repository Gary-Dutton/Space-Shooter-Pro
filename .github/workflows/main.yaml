name: CI - Build All Platforms
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
#----------------
# Build Project
#----------------
  buildWithLinux:
    name: build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: unbuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.3.39f1
        targetPlatform:
          - WebGL # WebGL
    steps:
      - name: Checkout Repsitory
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - name: Cache Library
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - name: Build Unity Project
        uses: game-ci/unity-builder@v2.0-alpha-10
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          buildName: ${{ matrix.targetPlatform }}
      - name: Upload Build
        uses: actions/upload-artifact@v2
        if: github.event.action == 'published'
        with:
          name: build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
      - name: Zip build/${{ matrix.targetPlatform }}
        uses: montudor/zip@v1
        if: github.event.action == 'published'
        with:
          args: zip -qq -r build-${{ matrix.targetPlatform }}.zip buuld/${{ matrix.targetPlatform }}
      - name: Upload build-${{ matrix.targetPlatform }}.zip to Github Release
        uses: svenstaro/upload-release-action@v2
        if: github.event.action == 'published'
        with:
          repo_token: ${{ secret.GH_CREDENTIALS }}
          asset_name: build-${{ matrix.targetPlatform }}.zip
          file: build/build-${{ matrix.targetPlatform }}.zip
          tag: ${{ github.ref }}
          overwrite: true
          body: ${{ github.event.release.body }}
          
#------------------
# Deploy to itch.io
#------------------
release_webgl_to_itch:
  name: Release WebGL to itch.io
  run-on: ubuntu-latest
  needs: build
  if: github.event.action == 'published'
  steps:
    - name: download WEBGL
      id: download-webgl
      uses: dsaltares/fetch-gh-release-asset@main
      with:
        version: "latest"
        file: build-WebGL.zip
        token: "${{ secrets.GH_CREDENTIALS }}"
    - name: deploy to itch.io (WEBGL)
      uses: josephbmanley/butler-publish-itchio-action@main
      env:
        BUTLER_CREDENTIALS: ${{ secret.BUTLER_CREDENTIALS }}
        CHANNEL: html
        ITCH_GAME: space-shooter
        ITCH_USER: Gary.Dutton
        PACKAGE: build-WebGL.zip
        VERSION: ${{ steps.download-webgl.outputs.version }}
